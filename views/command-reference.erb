<!--
Command Reference
What each gem command does, and how to use it.
-->

<h2>
	コマンドリファレンス<br />
	<small>gemコマンドの動作と使用方法について。</small>
</h2>

<hr	/>

<ul>
<li><a href='#gem_build'>gem build</a></li>
<li><a href='#gem_cert'>gem cert</a></li>
<li><a href='#gem_check'>gem check</a></li>
<li><a href='#gem_cleanup'>gem cleanup</a></li>
<li><a href='#gem_contents'>gem contents</a></li>
<li><a href='#gem_dependency'>gem dependency</a></li>
<li><a href='#gem_environment'>gem environment</a></li>
<li><a href='#gem_fetch'>gem fetch</a></li>
<li><a href='#gem_generate_index'>gem generate_index</a></li>
<li><a href='#gem_help'>gem help</a></li>
<li><a href='#gem_install'>gem install</a></li>
<li><a href='#gem_list'>gem list</a></li>
<li><a href='#gem_lock'>gem lock</a></li>
<li><a href='#gem_outdated'>gem outdated</a></li>
<li><a href='#gem_owner'>gem owner</a></li>
<li><a href='#gem_pristine'>gem pristine</a></li>
<li><a href='#gem_push'>gem push</a></li>
<li><a href='#gem_query'>gem query</a></li>
<li><a href='#gem_rdoc'>gem rdoc</a></li>
<li><a href='#gem_search'>gem search</a></li>
<li><a href='#gem_server'>gem server</a></li>
<li><a href='#gem_sources'>gem sources</a></li>
<li><a href='#gem_specification'>gem specification</a></li>
<li><a href='#gem_stale'>gem stale</a></li>
<li><a href='#gem_uninstall'>gem uninstall</a></li>
<li><a href='#gem_unpack'>gem unpack</a></li>
<li><a href='#gem_update'>gem update</a></li>
<li><a href='#gem_which'>gem which</a></li>
</ul>

<hr	/>

<!--
gem build
Build a gem from a gemspec

Usage
gem build GEMSPEC_FILE [options]
Common Options:
-h, -​-help - Get help on this command
-V, -​-[no-]verbose - Set the verbose level of output
-q, -​-quiet - Silence commands
-​-config-file FILE - Use this config file instead of default
-​-backtrace - Show stack backtrace on errors
-​-debug - Turn on Ruby debugging
Arguments
GEMSPEC_FILE - gemspec file name to build a gem for
-->

<h3>gem build</h3>

<p>gemspecからgemをビルドします。</p>

<h4>使い方</h4>

<pre>
gem build GEMSPEC_FILE [options]
</pre>

<h4>共通オプション</h4>

<ul>
<li>-h, -​-help - Get help on this command</li>
<li>-V, -​-[no-]verbose - Set the verbose level of output</li>
<li>-q, -​-quiet - Silence commands</li>
<li>-​-config-file FILE - Use this config file instead of default</li>
<li>-​-backtrace - Show stack backtrace on errors</li>
<li>-​-debug - Turn on Ruby debugging</li>
</ul>

<h4>引数</h4>
<ul>
<li>GEMSPEC_FILE - gemspec file name to build a gem for</li>
</ul>

<hr	/>

<!--
gem cert

Manage RubyGems certificates and signing settings

Usage
gem cert [options]
Options:
-a, -​-add CERT - Add a trusted certificate.
-l, -​-list - List trusted certificates.
-r, -​-remove STRING - Remove trusted certificates containing STRING.
-b, -​-build EMAIL_ADDR - Build private key and self-signed certificate for EMAIL_ADDR.
-C, -​-certificate CERT - Certificate for -​-sign command.
-K, -​-private-key KEY - Private key for -​-sign command.
-s, -​-sign NEWCERT - Sign a certificate with my key and certificate.
Common Options:
-h, -​-help - Get help on this command
-V, -​-[no-]verbose - Set the verbose level of output
-q, -​-quiet - Silence commands
-​-config-file FILE - Use this config file instead of default
-​-backtrace - Show stack backtrace on errors
-​-debug - Turn on Ruby debugging
-->

<h3>gem cert</h3>

<p>RubyGemsの証明書と署名設定の監理をします。</p>

<h4>使い方</h4>

<pre>
gem cert [options]
</pre>

<h4>オプション</h4>

<ul>
<li>-a, -​-add CERT - Add a trusted certificate.</li>
<li>-l, -​-list - List trusted certificates.</li>
<li>-r, -​-remove STRING - Remove trusted certificates containing STRING.</li>
<li>-b, -​-build EMAIL_ADDR - Build private key and self-signed certificate for EMAIL_ADDR.</li>
<li>-C, -​-certificate CERT - Certificate for -​-sign command.</li>
<li>-K, -​-private-key KEY - Private key for -​-sign command.</li>
<li>-s, -​-sign NEWCERT - Sign a certificate with my key and certificate.</li>
</ul>

<h4>共通オプション</h4>

<ul>
<li>-h, -​-help - Get help on this command</li>
<li>-V, -​-[no-]verbose - Set the verbose level of output</li>
<li>-q, -​-quiet - Silence commands</li>
<li>-​-config-file FILE - Use this config file instead of default</li>
<li>-​-backtrace - Show stack backtrace on errors</li>
<li>-​-debug - Turn on Ruby debugging</li>
</ul>

<hr	/>

<!--
gem check

Check installed gems

Usage
gem check [options]
Options:
-​-verify FILE - Verify gem file against its internal checksum
-a, -​-alien - Report ‘unmanaged’ or rogue files in the gem repository
-v, -​-version VERSION - Specify version of gem to check
Common Options:
-h, -​-help - Get help on this command
-V, -​-[no-]verbose - Set the verbose level of output
-q, -​-quiet - Silence commands
-​-config-file FILE - Use this config file instead of default
-​-backtrace - Show stack backtrace on errors
-​-debug - Turn on Ruby debugging
-->

<h3>gem check</h3>

<p>インストールされたgemを確認します。</p>

<h4>使い方</h4>

<pre>
gem check [options]
</pre>

<h4>オプション</h4>

<ul>
<li>-​-verify FILE - Verify gem file against its internal checksum</li>
<li>-a, -​-alien - Report ‘unmanaged’ or rogue files in the gem repository</li>
<li>-v, -​-version VERSION - Specify version of gem to check</li>
</ul>

<h4>共通オプション</h4>

<ul>
<li>-h, -​-help - Get help on this command</li>
<li>-V, -​-[no-]verbose - Set the verbose level of output</li>
<li>-q, -​-quiet - Silence commands</li>
<li>-​-config-file FILE - Use this config file instead of default</li>
<li>-​-backtrace - Show stack backtrace on errors</li>
<li>-​-debug - Turn on Ruby debugging</li>
</ul>

<hr	/>

<!--
gem cleanup

Clean up old versions of installed gems in the local repository

Usage
gem cleanup [GEMNAME ...] [options]
Options:
-d, -​-dryrun
Common Options:
-h, -​-help - Get help on this command
-V, -​-[no-]verbose - Set the verbose level of output
-q, -​-quiet - Silence commands
-​-config-file FILE - Use this config file instead of default
-​-backtrace - Show stack backtrace on errors
-​-debug - Turn on Ruby debugging
Arguments
GEMNAME - name of gem to cleanup
Description
The cleanup command removes old gems from GEM_HOME. 
If an older version is installed elsewhere in GEM_PATH the cleanup command won’t touch it.
-->

<h3>gem cleanup</h3>

<p>ローカルリポジトリにあるインストールされたgemの古いバージョンを取り除きます。</p>

<h4>使い方</h4>

<pre>gem cleanup [GEMNAME ...] [options]</pre>

<h4>共通オプション</h4>

<ul>
	<li>-d, -​-dryrun</li>
</ul>

<h4>共通オプション</h4>

<ul>
<li>-h, -​-help - Get help on this command</li>
<li>-V, -​-[no-]verbose - Set the verbose level of output</li>
<li>-q, -​-quiet - Silence commands</li>
<li>-​-config-file FILE - Use this config file instead of default</li>
<li>-​-backtrace - Show stack backtrace on errors</li>
<li>-​-debug - Turn on Ruby debugging</li>
</ul>

<h4>引数</h4>

<ul>
	<li>GEMNAME - name of gem to cleanup</li>
</ul>

<h4>解説</h4>

<p>
	cleanupコマンドは、GEM_HOMEから古いgemを削除します。
	もし、より古いバージョンがGEM_PATH以外の場所にインストールされていたとしても、cleanupコマンドはそれを削除することはできません。
</p>

<hr	/>

<!--
gem contents

Display the contents of the installed gems

Usage
gem contents GEMNAME [GEMNAME ...] [options]
Options:
-v, -​-version VERSION - Specify version of gem to contents
-​-all - Contents for all gems
-s, -​-spec-dir a,b,c - Search for gems under specific paths
-l, -​-[no-]lib-only - Only return files in the Gem’s lib_dirs
-​-[no-]prefix - Don’t include installed path prefix
Common Options:
-h, -​-help - Get help on this command
-V, -​-[no-]verbose - Set the verbose level of output
-q, -​-quiet - Silence commands
-​-config-file FILE - Use this config file instead of default
-​-backtrace - Show stack backtrace on errors
-​-debug - Turn on Ruby debugging
Arguments
GEMNAME - name of gem to list contents for
-->

<h3>gem contents</h3>
<p>インストールされたgemの内容を表示します。</p>

<h4>使い方</h4>
<pre>gem contents GEMNAME [GEMNAME ...] [options]</pre>

<h4>オプション</h4>
<ul>
<li>-v, -​-version VERSION - Specify version of gem to contents</li>
<li>-​-all - Contents for all gems</li>
<li>-s, -​-spec-dir a,b,c - Search for gems under specific paths</li>
<li>-l, -​-[no-]lib-only - Only return files in the Gem’s lib_dirs</li>
<li>-​-[no-]prefix - Don’t include installed path prefix</li>
</ul>

<h4>共通オプション</h4>
<ul>
<li>-h, -​-help - Get help on this command</li>
<li>-V, -​-[no-]verbose - Set the verbose level of output</li>
<li>-q, -​-quiet - Silence commands</li>
<li>-​-config-file FILE - Use this config file instead of default</li>
<li>-​-backtrace - Show stack backtrace on errors</li>
<li>-​-debug - Turn on Ruby debugging</li>
</ul>

<h4>引数</h4>
<ul>
<li>GEMNAME - name of gem to list contents for</li>
</ul>

<hr	/>

<!--
gem dependency

Show the dependencies of an installed gem

Usage
gem dependency GEMNAME [options]
Options:
-v, -​-version VERSION - Specify version of gem to dependency
-​-platform PLATFORM - Specify the platform of gem to dependency
-​-[no-]prerelease - Allow prerelease versions of a gem
-R, -​-[no-]reverse-dependencies Include reverse dependencies in the output
-​-pipe - Pipe Format (name -​-version ver)
Deprecated Options:
-u, -​-[no-]update-sources - Update local source cache
Local/Remote Options:
-l, -​-local - Restrict operations to the LOCAL domain
-r, -​-remote - Restrict operations to the REMOTE domain
-b, -​-both - Allow LOCAL and REMOTE operations
-B, -​-bulk-threshold COUNT - Threshold for switching to bulk synchronization (default 1000)
-​-clear-sources - Clear the gem sources
-​-source URL - Add URL as a remote source for gems
-p, -​-[no-]http-proxy [URL] - Use HTTP proxy for remote operations
Common Options:
-h, -​-help - Get help on this command
-V, -​-[no-]verbose - Set the verbose level of output
-q, -​-quiet - Silence commands
-​-config-file FILE - Use this config file instead of default
-​-backtrace - Show stack backtrace on errors
-​-debug - Turn on Ruby debugging
Arguments
GEMNAME - name of gem to show dependencies for
-->

<h3>gem dependency</h3>
<p>インストールされたgemの依存関係を表示します。</p>

<h4>使い方</h4>
<pre>gem dependency GEMNAME [options]</pre>

<h4>オプション</h4>
<ul>
<li>-v, -​-version VERSION - Specify version of gem to dependency</li>
<li>-​-platform PLATFORM - Specify the platform of gem to dependency</li>
<li>-​-[no-]prerelease - Allow prerelease versions of a gem</li>
<li>-R, -​-[no-]reverse-dependencies Include reverse dependencies in the output</li>
<li>-​-pipe - Pipe Format (name -​-version ver)</li>
</ul>

<h4>廃止予定のオプション</h4>
<ul>
<li>-u, -​-[no-]update-sources - Update local source cache</li>
</ul>

<h4>ローカル/リモート オプション</h4>
<ul>
<li>-l, -​-local - Restrict operations to the LOCAL domain</li>
<li>-r, -​-remote - Restrict operations to the REMOTE domain</li>
<li>-b, -​-both - Allow LOCAL and REMOTE operations</li>
<li>-B, -​-bulk-threshold COUNT - Threshold for switching to bulk synchronization (default 1000)</li>
<li>-​-clear-sources - Clear the gem sources</li>
<li>-​-source URL - Add URL as a remote source for gems</li>
<li>-p, -​-[no-]http-proxy [URL] - Use HTTP proxy for remote operations</li>
</ul>

<h4>共通オプション</h4>
<ul>
<li>-h, -​-help - Get help on this command</li>
<li>-V, -​-[no-]verbose - Set the verbose level of output</li>
<li>-q, -​-quiet - Silence commands</li>
<li>-​-config-file FILE - Use this config file instead of default</li>
<li>-​-backtrace - Show stack backtrace on errors</li>
<li>-​-debug - Turn on Ruby debugging</li>
</ul>

<h4>引数</h4>
<ul>
<li>GEMNAME - name of gem to show dependencies for</li>
</ul>

<hr	/>

<!--
gem environment

Display information about the RubyGems environment

Usage
gem environment [arg] [options]
Common Options:
-h, -​-help - Get help on this command
-V, -​-[no-]verbose - Set the verbose level of output
-q, -​-quiet - Silence commands
-​-config-file FILE - Use this config file instead of default
-​-backtrace - Show stack backtrace on errors
-​-debug - Turn on Ruby debugging
Arguments
packageversion - display the package version
gemdir - display the path where gems are installed
gempath - display path used to search for gems
version - display the gem format version
remotesources - display the remote gem servers
platform - display the supported gem platforms
<omitted> - display everything
Description
The RubyGems environment can be controlled through command line arguments, gemrc files, environment variables and built-in defaults.
-->

<h3>gem environment</h3>
<p>RubyGemsの環境についての情報を表示します。</p>

<h4>使い方</h4>
<pre>gem environment [arg] [options]</pre>

<h4>共通オプション</h4>
<ul>
<li>-h, -​-help - Get help on this command</li>
<li>-V, -​-[no-]verbose - Set the verbose level of output</li>
<li>-q, -​-quiet - Silence commands</li>
<li>-​-config-file FILE - Use this config file instead of default</li>
<li>-​-backtrace - Show stack backtrace on errors</li>
<li>-​-debug - Turn on Ruby debugging</li>
</ul>

<h4>引数</h4>
<ul>
<li>packageversion - display the package version</li>
<li>gemdir - display the path where gems are installed</li>
<li>gempath - display path used to search for gems</li>
<li>version - display the gem format version</li>
<li>remotesources - display the remote gem servers</li>
<li>platform - display the supported gem platforms</li>
<li><omitted> - display everything</li>
</ul>

<h4>解説</h4>
<p>
	RubyGemsの環境はコマンドライン引数、gemrcファイル、環境変数、初期設定値を通して操作されることができます。
</p>

<!--
Command line argument defaults and some RubyGems defaults can be set in ~/.gemrc file for individual users and a /etc/gemrc for all users. 
A gemrc is a YAML file with the following YAML keys:
-->

<p>
	デフォルトのコマンドライン引数とデフォルトのRubyGemsは、個別ユーザのための「~/.gemrc」ファイルと、全てのユーザのための「/etc/gemrc」ファイルに設定されることができます。
	「gemrc」は、以下のYAMLキーに従ったYAMLファイルです。
</p>

<pre>
:sources: A YAML array of remote gem repositories to install gems from
:verbose: Verbosity of the gem command.  false, true, and :really are the
          levels
:update_sources: Enable/disable automatic updating of repository metadata
:backtrace: Print backtrace when RubyGems encounters an error
:gempath: The paths in which to look for gems
gem_command: A string containing arguments for the specified gem command
</pre>

<!--
Example:
-->

<p>例：</p>
<pre>
:verbose: false
install: --no-wrappers
update: --no-wrappers
</pre>

<!--
RubyGems’ default local repository can be overridden with the GEM_PATH and GEM_HOME environment variables. 
GEM_HOME sets the default repository to install into. 
GEM_PATH allows multiple local repositories to be searched for gems.

If you are behind a proxy server, RubyGems uses the HTTP_PROXY, HTTP_PROXY_USER and HTTP_PROXY_PASS environment variables to discover the proxy server.

If you are packaging RubyGems all of RubyGems’ defaults are in lib/rubygems/defaults.rb. 
You may override these in lib/rubygems/defaults/operating_system.rb
-->

<p>
	RubyGemsのデフォルトローカルリポジトリは、環境変数「GEM_PATH」や「GEM_HOME」によって上書きされることができます。
	「GEM_HOME」はインストールのためのデフォルトリポジトリを設定します。
	「GEM_PATH」はgemに検索されるための複数のローカルリポジトリを設定できます。
</p>

<p>
	もしあなたがプロキシサーバの下にあるなら、RubyGemsはプロキシサーバを検出するための環境変数「HTTP_PROXY」「HTTP_PROXY_USER」「HTTP_PROXY_PASS」を使います。
</p>

<p>
	もしあなたがRubyGemsをパッケージングする場合、RubyGemsの規定値の全ては「lib/rubygems/defaults.rb」になります。
	あなたは「lib/rubygems/defaults/operating_system.rb」の設定を上書きしてもいいです。
</p>

<hr	/>

<!--
gem fetch

Download a gem and place it in the current directory

Usage
gem fetch GEMNAME [GEMNAME ...] [options]
Options:
-v, -​-version VERSION - Specify version of gem to fetch
-​-platform PLATFORM - Specify the platform of gem to fetch
-​-[no-]prerelease - Allow prerelease versions of a gem
Local/Remote Options:
-B, -​-bulk-threshold COUNT - Threshold for switching to bulk synchronization (default 1000)
-p, -​-[no-]http-proxy [URL] - Use HTTP proxy for remote operations
-​-source URL - Add URL as a remote source for gems
Common Options:
-h, -​-help - Get help on this command
-V, -​-[no-]verbose - Set the verbose level of output
-q, -​-quiet - Silence commands
-​-config-file FILE - Use this config file instead of default
-​-backtrace - Show stack backtrace on errors
-​-debug - Turn on Ruby debugging
Arguments
GEMNAME - name of gem to download
-->

<h3>gem fetch</h3>
<p>gemをダウンロードし、現在のディレクトリに配置します。</p>

<h4>使い方</h4>
<pre>gem fetch GEMNAME [GEMNAME ...] [options]</pre>

<h4>オプション</h4>
<ul>
<li>-v, -​-version VERSION - Specify version of gem to fetch</li>
<li>-​-platform PLATFORM - Specify the platform of gem to fetch</li>
<li>-​-[no-]prerelease - Allow prerelease versions of a gem</li>
</ul>

<h4>ローカル/リモート オプション</h4>
<ul>
<li>-B, -​-bulk-threshold COUNT - Threshold for switching to bulk synchronization (default 1000)</li>
<li>-p, -​-[no-]http-proxy [URL] - Use HTTP proxy for remote operations</li>
<li>-​-source URL - Add URL as a remote source for gems</li>
</ul>

<h4>共通オプション</h4>
<ul>
<li>-h, -​-help - Get help on this command</li>
<li>-V, -​-[no-]verbose - Set the verbose level of output</li>
<li>-q, -​-quiet - Silence commands</li>
<li>-​-config-file FILE - Use this config file instead of default</li>
<li>-​-backtrace - Show stack backtrace on errors</li>
<li>-​-debug - Turn on Ruby debugging</li>
</ul>

<h4>引数</h4>
<ul>
<li>GEMNAME - name of gem to download</li>
</ul>

<hr	/>

<!--
gem generate_index

Generates the index files for a gem server directory

Usage
gem generate_index [options]
Options:
-d, -​-directory=DIRNAME - repository base dir containing gems subdir
-​-[no-]legacy - Generate Marshal.4.8
-​-[no-]modern - Generate indexes for RubyGems newer than 1.2.0
-​-update - Update modern indexes with gems added since the last update
RSS Options:
-​-rss-gems-host=GEM_HOST - Host name where gems are served from, used for GUID and enclosure values
-​-rss-host=HOST - Host name for more gems information, used for RSS feed link
-​-rss-title=TITLE - Set title for RSS feed
Common Options:
-h, -​-help - Get help on this command
-V, -​-[no-]verbose - Set the verbose level of output
-q, -​-quiet - Silence commands
-​-config-file FILE - Use this config file instead of default
-​-backtrace - Show stack backtrace on errors
-​-debug - Turn on Ruby debugging
Description
The generate_index command creates a set of indexes for serving gems statically. 
The command expects a ‘gems’ directory under the path given to the –directory option. 
The given directory will be the directory you serve as the gem repository.
-->

<h3>gem generate_index</h3>
<p>gemサーバディレクトリのためのインデックスファイルを生成します。</p>

<h4>使い方</h4>
<pre>gem generate_index [options]</pre>

<h4>オプション</h4>
<ul>
<li>-d, -​-directory=DIRNAME - repository base dir containing gems subdir</li>
<li>-​-[no-]legacy - Generate Marshal.4.8</li>
<li>-​-[no-]modern - Generate indexes for RubyGems newer than 1.2.0</li>
<li>-​-update - Update modern indexes with gems added since the last update</li>
</ul>

<h4>RSSオプション</h4>
<ul>
<li>-​-rss-gems-host=GEM_HOST - Host name where gems are served from, used for GUID and enclosure values</li>
<li>-​-rss-host=HOST - Host name for more gems information, used for RSS feed link</li>
<li>-​-rss-title=TITLE - Set title for RSS feed</li>
</ul>

<h4>共通オプション</h4>
<ul>
<li>-h, -​-help - Get help on this command</li>
<li>-V, -​-[no-]verbose - Set the verbose level of output</li>
<li>-q, -​-quiet - Silence commands</li>
<li>-​-config-file FILE - Use this config file instead of default</li>
<li>-​-backtrace - Show stack backtrace on errors</li>
<li>-​-debug - Turn on Ruby debugging</li>
</ul>

<h4>解説</h4>
<p>
	generate_indexコマンドは、静的にgemを提供するためのインデックスのセットを作成します。
	このコマンドは、「–directory」オプションで指定されたパスの下の「gems」ディレクトリを想定します。
	この指定されたディレクトリは、gemのリポジトリとして提供するディレクトリになるでしょう。
</p>

<!--
For gem generate_index --directory /path/to/repo, expose /path/to/repo via your HTTP server configuration (not /path/to/repo/gems).

When done, it will generate a set of files like this:
-->

<p>
	「gem generate_index --directory /path/to/repo」によって、HTTPサーバの構成を経由して「/path/to/repo」を公開します。
	（「/path/to/repo/gems」ではない）
</p>
<p>
	そうすると、以下のようなファイルのセットが生成されます。
</p>

<pre>
gems/*.gem                                   # .gem files you want to
                                             # index

specs.<version>.gz                           # specs index
latest_specs.<version>.gz                    # latest specs index
prerelease_specs.<version>.gz                # prerelease specs index
quick/Marshal.<version>/<gemname>.gemspec.rz # Marshal quick index file

# these files support legacy RubyGems
Marshal.<version>
Marshal.<version>.Z                          # Marshal full index
</pre>

<!--
The .Z and .rz extension files are compressed with the inflate algorithm. 
The Marshal version number comes from ruby’s Marshal::MAJOR_VERSION and Marshal::MINOR_VERSION constants. 
It is used to ensure compatibility.

If –rss-host and –rss-gem-host are given an RSS feed will be generated at index.rss containing gems released in the last two days.
-->

<p>
	拡張子が「.Z」や「.rz」のファイルは、inflateアルゴリズムによって圧縮されています。
	Marshalのバージョン番号はrubyの定数「Marshal::MAJOR_VERSION」「Marshal::MINOR_VERSION」からきます。
	それは互換性を保証するためにつかわれます。
</p>
<p>
	もし「–rss-host」や「–rss-gem-host」が与えられたら、RSSフィードは2日以内にリリースされたgemを含む「index.rss」が生成されるでしょう。
</p>

<hr	/>

<!--
gem help

Provide help on the ‘gem’ command

Usage
gem help ARGUMENT [options]
Common Options:
-h, -​-help - Get help on this command
-V, -​-[no-]verbose - Set the verbose level of output
-q, -​-quiet - Silence commands
-​-config-file FILE - Use this config file instead of default
-​-backtrace - Show stack backtrace on errors
-​-debug - Turn on Ruby debugging
Arguments
commands - List all ‘gem’ commands
examples - Show examples of ‘gem’ usage
<command> - Show specific help for <command>
-->

<h3>gem help</h3>
<p>gemコマンドのヘルプを提供します。</p>

<h4>使い方</h4>
<pre>gem help ARGUMENT [options]</pre>

<h4>共通オプション</h4>
<ul>
<li>-h, -​-help - Get help on this command</li>
<li>-V, -​-[no-]verbose - Set the verbose level of output</li>
<li>-q, -​-quiet - Silence commands</li>
<li>-​-config-file FILE - Use this config file instead of default</li>
<li>-​-backtrace - Show stack backtrace on errors</li>
<li>-​-debug - Turn on Ruby debugging</li>
</ul>

<h4>引数</h4>
<ul>
<li>commands - List all ‘gem’ commands</li>
<li>examples - Show examples of ‘gem’ usage</li>
<li><command> - Show specific help for <command></li>
</ul>

<hr	/>

<!--
gem install

Install a gem into the local repository

Usage
gem install GEMNAME [GEMNAME ...] [options] -- --build-flags [options]
Options:
-​-platform PLATFORM - Specify the platform of gem to install
-v, -​-version VERSION - Specify version of gem to install
-​-[no-]prerelease - Allow prerelease versions of a gem to be installed. (Only for listed gems)
Deprecated Options:
-u, -​-[no-]update-sources - Update local source cache
Install/Update Options:
-i, -​-install-dir DIR - Gem repository directory to get installed gems
-n, -​-bindir DIR - Directory where binary files are located
-d, -​-[no-]rdoc - Generate RDoc documentation for the gem on install
-​-[no-]ri - Generate RI documentation for the gem on install
-E, -​-[no-]env-shebang - Rewrite the shebang line on installed scripts to use /usr/bin/env
-f, -​-[no-]force - Force gem to install, bypassing dependency checks
-w, -​-[no-]wrappers - Use bin wrappers for executables Not available on dosish platforms
-P, -​-trust-policy POLICY - Specify gem trust policy
-​-ignore-dependencies - Do not install any required dependent gems
-y, -​-include-dependencies - Unconditionally install the required dependent gems
-​-[no-]format-executable - Make installed executable names match ruby. If ruby is ruby18, foo_exec will be foo_exec18
-​-[no-]user-install - Install in user’s home directory instead of GEM_HOME.
-​-development - Install any additional development dependencies
-​-conservative - Don’t attempt to upgrade gems already meeting version requirement
Local/Remote Options:
-l, -​-local - Restrict operations to the LOCAL domain
-r, -​-remote - Restrict operations to the REMOTE domain
-b, -​-both - Allow LOCAL and REMOTE operations
-B, -​-bulk-threshold COUNT - Threshold for switching to bulk synchronization (default 1000)
-​-clear-sources - Clear the gem sources
-​-source URL - Add URL as a remote source for gems
-p, -​-[no-]http-proxy [URL] - Use HTTP proxy for remote operations
Common Options:
-h, -​-help - Get help on this command
-V, -​-[no-]verbose - Set the verbose level of output
-q, -​-quiet - Silence commands
-​-config-file FILE - Use this config file instead of default
-​-backtrace - Show stack backtrace on errors
-​-debug - Turn on Ruby debugging
Arguments
GEMNAME - name of gem to install
Description
The install command installs local or remote gem into a gem repository.
-->

<h3>gem install</h3>
<p>ローカルリポジトリにgemをインストールします。</p>

<h4>使い方</h4>
<pre>gem install GEMNAME [GEMNAME ...] [options] -- --build-flags [options]</pre>

<h4>オプション</h4>
<ul>
<li>-​-platform PLATFORM - Specify the platform of gem to install</li>
<li>-v, -​-version VERSION - Specify version of gem to install</li>
<li>-​-[no-]prerelease - Allow prerelease versions of a gem to be installed. (Only for listed gems)</li>
</ul>

<h4>廃止予定のオプション</h4>
<ul>
<li>-u, -​-[no-]update-sources - Update local source cache</li>
</ul>
	
<h4>インストール/アップデート オプション</h4>
<ul>
<li>-i, -​-install-dir DIR - Gem repository directory to get installed gems</li>
<li>-n, -​-bindir DIR - Directory where binary files are located</li>
<li>-d, -​-[no-]rdoc - Generate RDoc documentation for the gem on install</li>
<li>-​-[no-]ri - Generate RI documentation for the gem on install</li>
<li>-E, -​-[no-]env-shebang - Rewrite the shebang line on installed scripts to use /usr/bin/env</li>
<li>-f, -​-[no-]force - Force gem to install, bypassing dependency checks</li>
<li>-w, -​-[no-]wrappers - Use bin wrappers for executables Not available on dosish platforms</li>
<li>-P, -​-trust-policy POLICY - Specify gem trust policy</li>
<li>-​-ignore-dependencies - Do not install any required dependent gems</li>
<li>-y, -​-include-dependencies - Unconditionally install the required dependent gems</li>
<li>-​-[no-]format-executable - Make installed executable names match ruby. If ruby is ruby18, foo_exec will be foo_exec18</li>
<li>-​-[no-]user-install - Install in user’s home directory instead of GEM_HOME.</li>
<li>-​-development - Install any additional development dependencies</li>
<li>-​-conservative - Don’t attempt to upgrade gems already meeting version requirement</li>
</ul>

<h4>ローカル/リモート オプション</h4>
<ul>
<li>-l, -​-local - Restrict operations to the LOCAL domain</li>
<li>-r, -​-remote - Restrict operations to the REMOTE domain</li>
<li>-b, -​-both - Allow LOCAL and REMOTE operations</li>
<li>-B, -​-bulk-threshold COUNT - Threshold for switching to bulk synchronization (default 1000)</li>
<li>-​-clear-sources - Clear the gem sources</li>
<li>-​-source URL - Add URL as a remote source for gems</li>
<li>-p, -​-[no-]http-proxy [URL] - Use HTTP proxy for remote operations</li>
</ul>
	
<h4>共通オプション</h4>
<ul>
<li>-h, -​-help - Get help on this command</li>
<li>-V, -​-[no-]verbose - Set the verbose level of output</li>
<li>-q, -​-quiet - Silence commands</li>
<li>-​-config-file FILE - Use this config file instead of default</li>
<li>-​-backtrace - Show stack backtrace on errors</li>
<li>-​-debug - Turn on Ruby debugging</li>
</ul>

<h4>引数</h4>
<ul>
<li>GEMNAME - name of gem to install</li>
</ul>

<h4>解説</h4>
<p>installコマンドは、ローカルかリモートのgemをgemリポジトリにインストールします。</p>

<!--
For gems with executables ruby installs a wrapper file into the executable directory by default. 
This can be overridden with the –no-wrappers option. 
The wrapper allows you to choose among alternate gem versions using version.

For example rake _0.7.3_ --version will run rake version 0.7.3 if a newer version is also installed.

If an extension fails to compile during gem installation the gem specification is not written out, but the gem remains unpacked in the repository. 
You may need to specify the path to the library’s headers and libraries to continue. 
You can do this by adding a – between RubyGems’ options and the extension’s build options:
-->

<p>
	実行可能なrubyと一緒にgemのために、既定によって実行可能ディレクトリの中にラッパーファイルがインストールされます。
	これは「–no-wrappers」オプションによって上書きされます。
	ラッパーはあなたが使用しているバージョンと、代わりのバージョンを選ぶことを可能にします。
</p>

<p>
	例えば、もし一番新しいバージョンがインストールされているなら、「rake _0.7.3_ --version」はバージョン0.7.3で実行するでしょう。
</p>

<p>
	もし拡張子がgemのインストール中にコンパイルに失敗した拡張が失敗したなら、gemの仕様では書き込まれませんが、gemはリポジトリに解凍されて残っています。
	あなたは続行するにはためにはライブラリのヘッダーとライブラリのパスを指定する必要があります。
	あなたはRubyGemsのオプションと拡張ビルドオプションを追加することよってこれができます。
</p>

<pre>
$ gem install some_extension_gem
[build fails]
Gem files will remain installed in \
/path/to/gems/some_extension_gem-1.0 for inspection.
Results logged to /path/to/gems/some_extension_gem-1.0/gem_make.out
$ gem install some_extension_gem -- --with-extension-lib=/path/to/lib
[build succeeds]
$ gem list some_extension_gem

*** LOCAL GEMS ***

some_extension_gem (1.0)
$
</pre>

<!--
If you correct the compilation errors by editing the gem files you will need to write the specification by hand. For example:
-->

<p>
	もしあなたが編集したgemファイルによって発生したコンパイルエラーを修正する場合、あなたは手動で仕様を記述する必要があります。
	例えば以下のように。
</p>

<pre>
$ gem install some_extension_gem
[build fails]
Gem files will remain installed in \
/path/to/gems/some_extension_gem-1.0 for inspection.
Results logged to /path/to/gems/some_extension_gem-1.0/gem_make.out
$ [cd /path/to/gems/some_extension_gem-1.0]
$ [edit files or what-have-you and run make]
$ gem spec ../../cache/some_extension_gem-1.0.gem --ruby > \
           ../../specifications/some_extension_gem-1.0.gemspec
$ gem list some_extension_gem

*** LOCAL GEMS ***

some_extension_gem (1.0)
$
</pre>

<hr	/>

<!--
gem list

Display gems whose name starts with STRING

Usage
gem list [STRING] [options]
Options:
-i, -​-[no-]installed - Check for installed gem
-v, -​-version VERSION - Specify version of gem to list for use with -​-installed
-d, -​-[no-]details - Display detailed information of gem(s)
-​-[no-]versions - Display only gem names
-a, -​-all - Display all gem versions
-​-[no-]prerelease - Display prerelease versions
Deprecated Options:
-u, -​-[no-]update-sources - Update local source cache
Local/Remote Options:
-l, -​-local - Restrict operations to the LOCAL domain
-r, -​-remote - Restrict operations to the REMOTE domain
-b, -​-both - Allow LOCAL and REMOTE operations
-B, -​-bulk-threshold COUNT - Threshold for switching to bulk synchronization (default 1000)
-​-clear-sources - Clear the gem sources
-​-source URL - Add URL as a remote source for gems
-p, -​-[no-]http-proxy [URL] - Use HTTP proxy for remote operations
Common Options:
-h, -​-help - Get help on this command
-V, -​-[no-]verbose - Set the verbose level of output
-q, -​-quiet - Silence commands
-​-config-file FILE - Use this config file instead of default
-​-backtrace - Show stack backtrace on errors
-​-debug - Turn on Ruby debugging
Arguments
STRING - start of gem name to look for
-->

<h3>gem list</h3>
<p>名前が[STRING]で始まるgemを表示します。</p>

<h4>使い方</h4>
<pre>gem list [STRING] [options]</pre>

<h4>オプション</h4>
<ul>
<li>-i, -​-[no-]installed - Check for installed gem</li>
<li>-v, -​-version VERSION - Specify version of gem to list for use with -​-installed</li>
<li>-d, -​-[no-]details - Display detailed information of gem(s)</li>
<li>-​-[no-]versions - Display only gem names</li>
<li>-a, -​-all - Display all gem versions</li>
<li>-​-[no-]prerelease - Display prerelease versions</li>
</ul>

<h4>廃止予定のオプション</h4>
<ul><li>-u, -​-[no-]update-sources - Update local source cache</li></ul>

<h4>ローカル/リモート オプション</h4>
<ul>
<li>-l, -​-local - Restrict operations to the LOCAL domain</li>
<li>-r, -​-remote - Restrict operations to the REMOTE domain</li>
<li>-b, -​-both - Allow LOCAL and REMOTE operations</li>
<li>-B, -​-bulk-threshold COUNT - Threshold for switching to bulk synchronization (default 1000)</li>
<li>-​-clear-sources - Clear the gem sources</li>
<li>-​-source URL - Add URL as a remote source for gems</li>
<li>-p, -​-[no-]http-proxy [URL] - Use HTTP proxy for remote operations</li>
</ul>

<h4>共通オプション</h4>
<ul>
<li>-h, -​-help - Get help on this command</li>
<li>-V, -​-[no-]verbose - Set the verbose level of output</li>
<li>-q, -​-quiet - Silence commands</li>
<li>-​-config-file FILE - Use this config file instead of default</li>
<li>-​-backtrace - Show stack backtrace on errors</li>
<li>-​-debug - Turn on Ruby debugging</li>
</ul>

<h4>引数</h4>
<ul><li>STRING - start of gem name to look for</li></ul>

<hr	/>

<!--
gem lock

Generate a lockdown list of gems

Usage
gem lock GEMNAME-VERSION [GEMNAME-VERSION ...] [options]
Options:
-s, -​-[no-]strict - fail if unable to satisfy a dependency
Common Options:
-h, -​-help - Get help on this command
-V, -​-[no-]verbose - Set the verbose level of output
-q, -​-quiet - Silence commands
-​-config-file FILE - Use this config file instead of default
-​-backtrace - Show stack backtrace on errors
-​-debug - Turn on Ruby debugging
Arguments
GEMNAME - name of gem to lock
VERSION - version of gem to lock
-->

<h3>gem lock</h3>
<p>gemのロックダウンリストを生成します。</p>

<h4>使い方</h4>
<pre>gem lock GEMNAME-VERSION [GEMNAME-VERSION ...] [options]</pre>

<h4>オプション</h4>
<ul><li>-s, -​-[no-]strict - fail if unable to satisfy a dependency</li></ul>

<h4>共通オプション</h4>
<ul>
<li>-h, -​-help - Get help on this command</li>
<li>-V, -​-[no-]verbose - Set the verbose level of output</li>
<li>-q, -​-quiet - Silence commands</li>
<li>-​-config-file FILE - Use this config file instead of default</li>
<li>-​-backtrace - Show stack backtrace on errors</li>
<li>-​-debug - Turn on Ruby debugging</li>
</ul>

<h4>引数</h4>
<ul>
<li>GEMNAME - name of gem to lock</li>
<li>VERSION - version of gem to lock</li>
</ul>

Description
The lock command will generate a list of +gem+ statements that will lock down the versions for the gem given in the command line. 
It will specify exact versions in the requirements list to ensure that the gems loaded will always be consistent. 
A full recursive search of all effected gems will be generated.


<h4>解説</h4>
<p>
	lockコマンドはコマンドラインで与えられたgemにバージョンをロックダウンする +gem+ 文のリストを生成します。
	
</p>

Example:

<pre>gemlock rails-1.0.0 > lockdown.rb</pre>

will produce in lockdown.rb:

</pre>
require "rubygems"
gem 'rails', '= 1.0.0'
gem 'rake', '= 0.7.0.1'
gem 'activesupport', '= 1.2.5'
gem 'activerecord', '= 1.13.2'
gem 'actionpack', '= 1.11.2'
gem 'actionmailer', '= 1.1.5'
gem 'actionwebservice', '= 1.0.0'
</pre>

Just load lockdown.rb from your application to ensure that the current versions are loaded. 
Make sure that lockdown.rb is loaded before any other require statements.

Notice that rails 1.0.0 only requires that rake 0.6.2 or better be used. 
Rake-0.7.0.1 is the most recent version installed that satisfies that, so we lock it down to the exact version.




<hr	/>

gem outdated

Display all gems that need updates

Usage
gem outdated [options]
Options:
-​-platform PLATFORM - Specify the platform of gem to outdated
Deprecated Options:
-u, -​-[no-]update-sources - Update local source cache
Local/Remote Options:
-l, -​-local - Restrict operations to the LOCAL domain
-r, -​-remote - Restrict operations to the REMOTE domain
-b, -​-both - Allow LOCAL and REMOTE operations
-B, -​-bulk-threshold COUNT - Threshold for switching to bulk synchronization (default 1000)
-​-clear-sources - Clear the gem sources
-​-source URL - Add URL as a remote source for gems
-p, -​-[no-]http-proxy [URL] - Use HTTP proxy for remote operations
Common Options:
-h, -​-help - Get help on this command
-V, -​-[no-]verbose - Set the verbose level of output
-q, -​-quiet - Silence commands
-​-config-file FILE - Use this config file instead of default
-​-backtrace - Show stack backtrace on errors
-​-debug - Turn on Ruby debugging



<h3></h3>

<h4>使い方</h4>

<h4>共通オプション</h4>

<h4>引数</h4>

<hr	/>

gem owner

Manage gem owners on RubyGems.org.

Usage
gem owner [options]
Options:
-k, -​-key KEYNAME - Use the given API key from ~/.gem/credentials
-a, -​-add EMAIL - Add an owner
-r, -​-remove EMAIL - Remove an owner
Local/Remote Options:
-p, -​-[no-]http-proxy [URL] - Use HTTP proxy for remote operations
Common Options:
-h, -​-help - Get help on this command
-V, -​-[no-]verbose - Set the verbose level of output
-q, -​-quiet - Silence commands
-​-config-file FILE - Use this config file instead of default
-​-backtrace - Show stack backtrace on errors
-​-debug - Turn on Ruby debugging
Arguments
GEM - gem to manage owners for
Description
Manage gem owners on RubyGems.org.


<h3></h3>

<h4>使い方</h4>

<h4>共通オプション</h4>

<h4>引数</h4>

<hr	/>

gem pristine

Restores installed gems to pristine condition from files located in the gem cache

Usage
gem pristine [args] [options]
Options:
-​-all - Restore all installed gems to pristine condition
-​-[no-]extensions - Restore gems with extensions
-v, -​-version VERSION - Specify version of gem to restore to pristine condition
Common Options:
-h, -​-help - Get help on this command
-V, -​-[no-]verbose - Set the verbose level of output
-q, -​-quiet - Silence commands
-​-config-file FILE - Use this config file instead of default
-​-backtrace - Show stack backtrace on errors
-​-debug - Turn on Ruby debugging
Arguments
GEMNAME - gem to restore to pristine condition (unless –all)
Description
The pristine command compares the installed gems with the contents of the cached gem and restores any files that don’t match the cached gem’s copy.

If you have made modifications to your installed gems, the pristine command will revert them. After all the gem’s files have been checked all bin stubs for the gem are regenerated.

If the cached gem cannot be found, you will need to use gem install to revert the gem.

If –no-extensions is provided pristine will not attempt to restore gems with extensions.


<h3></h3>

<h4>使い方</h4>

<h4>共通オプション</h4>

<h4>引数</h4>

<hr	/>

gem push

Push a gem up to RubyGems.org

Usage
gem push GEM [options]
Options:
-k, -​-key KEYNAME - Use the given API key from ~/.gem/credentials
-​-host HOST - Push to another gemcutter-compatible host
Local/Remote Options:
-p, -​-[no-]http-proxy [URL] - Use HTTP proxy for remote operations
Common Options:
-h, -​-help - Get help on this command
-V, -​-[no-]verbose - Set the verbose level of output
-q, -​-quiet - Silence commands
-​-config-file FILE - Use this config file instead of default
-​-backtrace - Show stack backtrace on errors
-​-debug - Turn on Ruby debugging
Arguments
GEM - built gem to push up
Description
Push a gem up to RubyGems.org



<h3></h3>

<h4>使い方</h4>

<h4>共通オプション</h4>

<h4>引数</h4>

<hr	/>

gem query

Query gem information in local or remote repositories

Usage
gem query [options]
Options:
-i, -​-[no-]installed - Check for installed gem
-v, -​-version VERSION - Specify version of gem to query for use with -​-installed
-n, -​-name-matches REGEXP - Name of gem(s) to query on matches the provided REGEXP
-d, -​-[no-]details - Display detailed information of gem(s)
-​-[no-]versions - Display only gem names
-a, -​-all - Display all gem versions
-​-[no-]prerelease - Display prerelease versions
Deprecated Options:
-u, -​-[no-]update-sources - Update local source cache
Local/Remote Options:
-l, -​-local - Restrict operations to the LOCAL domain
-r, -​-remote - Restrict operations to the REMOTE domain
-b, -​-both - Allow LOCAL and REMOTE operations
-B, -​-bulk-threshold COUNT - Threshold for switching to bulk synchronization (default 1000)
-​-clear-sources - Clear the gem sources
-​-source URL - Add URL as a remote source for gems
-p, -​-[no-]http-proxy [URL] - Use HTTP proxy for remote operations
Common Options:
-h, -​-help - Get help on this command
-V, -​-[no-]verbose - Set the verbose level of output
-q, -​-quiet - Silence commands
-​-config-file FILE - Use this config file instead of default
-​-backtrace - Show stack backtrace on errors
-​-debug - Turn on Ruby debugging


<h3></h3>

<h4>使い方</h4>

<h4>共通オプション</h4>

<h4>引数</h4>

<hr	/>

gem rdoc

Generates RDoc for pre-installed gems

Usage
gem rdoc [args] [options]
Options:
-​-all - Generate RDoc/RI documentation for all installed gems
-​-[no-]rdoc - Generate RDoc HTML
-​-[no-]ri - Generate RI data
-​-[no-]overwrite - Overwrite installed documents
-v, -​-version VERSION - Specify version of gem to rdoc
Common Options:
-h, -​-help - Get help on this command
-V, -​-[no-]verbose - Set the verbose level of output
-q, -​-quiet - Silence commands
-​-config-file FILE - Use this config file instead of default
-​-backtrace - Show stack backtrace on errors
-​-debug - Turn on Ruby debugging
Arguments
GEMNAME - gem to generate documentation for (unless –all)
Description
The rdoc command builds RDoc and RI documentation for installed gems. Use –overwrite to force rebuilding of documentation.



<h3></h3>

<h4>使い方</h4>

<h4>共通オプション</h4>

<h4>引数</h4>

<hr	/>

gem search

Display all gems whose name contains STRING

Usage
gem search [STRING] [options]
Options:
-i, -​-[no-]installed - Check for installed gem
-v, -​-version VERSION - Specify version of gem to search for use with -​-installed
-d, -​-[no-]details - Display detailed information of gem(s)
-​-[no-]versions - Display only gem names
-a, -​-all - Display all gem versions
-​-[no-]prerelease - Display prerelease versions
Deprecated Options:
-u, -​-[no-]update-sources - Update local source cache
Local/Remote Options:
-l, -​-local - Restrict operations to the LOCAL domain
-r, -​-remote - Restrict operations to the REMOTE domain
-b, -​-both - Allow LOCAL and REMOTE operations
-B, -​-bulk-threshold COUNT - Threshold for switching to bulk synchronization (default 1000)
-​-clear-sources - Clear the gem sources
-​-source URL - Add URL as a remote source for gems
-p, -​-[no-]http-proxy [URL] - Use HTTP proxy for remote operations
Common Options:
-h, -​-help - Get help on this command
-V, -​-[no-]verbose - Set the verbose level of output
-q, -​-quiet - Silence commands
-​-config-file FILE - Use this config file instead of default
-​-backtrace - Show stack backtrace on errors
-​-debug - Turn on Ruby debugging
Arguments
STRING - fragment of gem name to search for


<h3></h3>

<h4>使い方</h4>

<h4>共通オプション</h4>

<h4>引数</h4>

<hr	/>

gem server

Documentation and gem repository HTTP server

Usage
gem server [options]
Options:
-p, -​-port=PORT - port to listen on
-d, -​-dir=GEMDIR - directories from which to serve gems multiple directories may be provided
-​-[no-]daemon - run as a daemon
-b, -​-bind=HOST,HOST - addresses to bind
-l, -​-launch[=COMMAND] - launches a browser window COMMAND defaults to ‘start’ on Windows and ‘open’ on all other platforms
Common Options:
-h, -​-help - Get help on this command
-V, -​-[no-]verbose - Set the verbose level of output
-q, -​-quiet - Silence commands
-​-config-file FILE - Use this config file instead of default
-​-backtrace - Show stack backtrace on errors
-​-debug - Turn on Ruby debugging
Description
The server command starts up a web server that hosts the RDoc for your installed gems and can operate as a server for installation of gems on other machines.

The cache files for installed gems must exist to use the server as a source for gem installation.

To install gems from a running server, use gem install GEMNAME --source
http://gem_server_host:8808

You can set up a shortcut to gem server documentation using the URL:

http://localhost:8808/rdoc?q=%s - Firefox
http://localhost:8808/rdoc?q=* - LaunchBar


<h3></h3>

<h4>使い方</h4>

<h4>共通オプション</h4>

<h4>引数</h4>

<hr	/>

gem sources

Manage the sources and cache file RubyGems uses to search for gems

Usage
gem sources [options]
Options:
-a, -​-add SOURCE_URI - Add source
-l, -​-list - List sources
-r, -​-remove SOURCE_URI - Remove source
-c, -​-clear-all - Remove all sources (clear the cache)
-u, -​-update - Update source cache
Local/Remote Options:
-p, -​-[no-]http-proxy [URL] - Use HTTP proxy for remote operations
Common Options:
-h, -​-help - Get help on this command
-V, -​-[no-]verbose - Set the verbose level of output
-q, -​-quiet - Silence commands
-​-config-file FILE - Use this config file instead of default
-​-backtrace - Show stack backtrace on errors
-​-debug - Turn on Ruby debugging


<h3></h3>

<h4>使い方</h4>

<h4>共通オプション</h4>

<h4>引数</h4>

<hr	/>

gem specification

Display gem specification (in yaml)

Usage
gem specification [GEMFILE] [FIELD] [options]
Options:
-v, -​-version VERSION - Specify version of gem to examine
-​-platform PLATFORM - Specify the platform of gem to specification
-​-all - Output specifications for all versions of the gem
-​-ruby - Output ruby format
-​-yaml - Output RUBY format
-​-marshal - Output Marshal format
Deprecated Options:
-u, -​-[no-]update-sources - Update local source cache
Local/Remote Options:
-l, -​-local - Restrict operations to the LOCAL domain
-r, -​-remote - Restrict operations to the REMOTE domain
-b, -​-both - Allow LOCAL and REMOTE operations
-B, -​-bulk-threshold COUNT - Threshold for switching to bulk synchronization (default 1000)
-​-clear-sources - Clear the gem sources
-​-source URL - Add URL as a remote source for gems
-p, -​-[no-]http-proxy [URL] - Use HTTP proxy for remote operations
Common Options:
-h, -​-help - Get help on this command
-V, -​-[no-]verbose - Set the verbose level of output
-q, -​-quiet - Silence commands
-​-config-file FILE - Use this config file instead of default
-​-backtrace - Show stack backtrace on errors
-​-debug - Turn on Ruby debugging
Arguments
GEMFILE - name of gem to show the gemspec for
FIELD - name of gemspec field to show


<h3></h3>

<h4>使い方</h4>

<h4>共通オプション</h4>

<h4>引数</h4>

<hr	/>

gem stale

List gems along with access times

Usage
gem stale [options]
Common Options:
-h, -​-help - Get help on this command
-V, -​-[no-]verbose - Set the verbose level of output
-q, -​-quiet - Silence commands
-​-config-file FILE - Use this config file instead of default
-​-backtrace - Show stack backtrace on errors
-​-debug - Turn on Ruby debugging


<h3></h3>

<h4>使い方</h4>

<h4>共通オプション</h4>

<h4>引数</h4>

<hr	/>

gem uninstall

Uninstall gems from the local repository

Usage
gem uninstall GEMNAME [GEMNAME ...] [options]
Options:
-a, -​-[no-]all - Uninstall all matching versions
-I, -​-[no-]ignore-dependencies - Ignore dependency requirements while uninstalling
-x, -​-[no-]executables - Uninstall applicable executables without confirmation
-i, -​-install-dir DIR - Directory to uninstall gem from
-n, -​-bindir DIR - Directory to remove binaries from
-​-[no-]user-install - Uninstall from user’s home directory in addition to GEM_HOME.
-​-[no-]format-executable - Assume executable names match Ruby’s prefix and suffix.
-v, -​-version VERSION - Specify version of gem to uninstall
-​-platform PLATFORM - Specify the platform of gem to uninstall
Common Options:
-h, -​-help - Get help on this command
-V, -​-[no-]verbose - Set the verbose level of output
-q, -​-quiet - Silence commands
-​-config-file FILE - Use this config file instead of default
-​-backtrace - Show stack backtrace on errors
-​-debug - Turn on Ruby debugging
Arguments
GEMNAME - name of gem to uninstall


<h3></h3>

<h4>使い方</h4>

<h4>共通オプション</h4>

<h4>引数</h4>

<hr	/>

gem unpack

Unpack an installed gem to the current directory

Usage
gem unpack GEMNAME [options]
Options:
-​-target=DIR - target directory for unpacking
-​-spec - unpack the gem specification
-v, -​-version VERSION - Specify version of gem to unpack
Common Options:
-h, -​-help - Get help on this command
-V, -​-[no-]verbose - Set the verbose level of output
-q, -​-quiet - Silence commands
-​-config-file FILE - Use this config file instead of default
-​-backtrace - Show stack backtrace on errors
-​-debug - Turn on Ruby debugging
Arguments
GEMNAME - name of gem to unpack


<h3></h3>

<h4>使い方</h4>

<h4>共通オプション</h4>

<h4>引数</h4>

<hr	/>

gem update

Update the named gems (or all installed gems) in the local repository

Usage
gem update GEMNAME [GEMNAME ...] [options]
Options:
-​-system [VERSION] - Update the RubyGems system software
-​-platform PLATFORM - Specify the platform of gem to update
-​-[no-]prerelease - Allow prerelease versions of a gem as update targets
Deprecated Options:
-u, -​-[no-]update-sources - Update local source cache
Install/Update Options:
-i, -​-install-dir DIR - Gem repository directory to get installed gems
-n, -​-bindir DIR - Directory where binary files are located
-d, -​-[no-]rdoc - Generate RDoc documentation for the gem on install
-​-[no-]ri - Generate RI documentation for the gem on install
-E, -​-[no-]env-shebang - Rewrite the shebang line on installed scripts to use /usr/bin/env
-f, -​-[no-]force - Force gem to install, bypassing dependency checks
-w, -​-[no-]wrappers - Use bin wrappers for executables Not available on dosish platforms
-P, -​-trust-policy POLICY - Specify gem trust policy
-​-ignore-dependencies - Do not install any required dependent gems
-y, -​-include-dependencies - Unconditionally install the required dependent gems
-​-[no-]format-executable - Make installed executable names match ruby. If ruby is ruby18, foo_exec will be foo_exec18
-​-[no-]user-install - Install in user’s home directory instead of GEM_HOME.
-​-development - Install any additional development dependencies
-​-conservative - Don’t attempt to upgrade gems already meeting version requirement
Local/Remote Options:
-l, -​-local - Restrict operations to the LOCAL domain
-r, -​-remote - Restrict operations to the REMOTE domain
-b, -​-both - Allow LOCAL and REMOTE operations
-B, -​-bulk-threshold COUNT - Threshold for switching to bulk synchronization (default 1000)
-​-clear-sources - Clear the gem sources
-​-source URL - Add URL as a remote source for gems
-p, -​-[no-]http-proxy [URL] - Use HTTP proxy for remote operations
Common Options:
-h, -​-help - Get help on this command
-V, -​-[no-]verbose - Set the verbose level of output
-q, -​-quiet - Silence commands
-​-config-file FILE - Use this config file instead of default
-​-backtrace - Show stack backtrace on errors
-​-debug - Turn on Ruby debugging
Arguments
GEMNAME - name of gem to update
gem which

Find the location of a library file you can require

Usage
gem which FILE [FILE ...] [options]
Options:
-a, -​-[no-]all - show all matching files
-g, -​-[no-]gems-first - search gems before non-gems
Common Options:
-h, -​-help - Get help on this command
-V, -​-[no-]verbose - Set the verbose level of output
-q, -​-quiet - Silence commands
-​-config-file FILE - Use this config file instead of default
-​-backtrace - Show stack backtrace on errors
-​-debug - Turn on Ruby debugging
Arguments
FILE - name of file to find
